{
  "title": "IIf",
  "summary": "In computing, IIf (an abbreviation for Immediate if) is a function in several editions of the Visual Basic programming language and ColdFusion Markup Language (CFML), and on spreadsheets that returns the second or third parameter based on the evaluation of the first parameter.  It is an example of a conditional expression, which is similar to a conditional statement.",
  "content": "---\ntitle: IIf\nurl: https://en.wikipedia.org/wiki/IIf\nlanguage: en\ncategories: [\"Category:All articles with topics of unclear notability\", \"Category:Articles with example BASIC code\", \"Category:Articles with example Python (programming language) code\", \"Category:Articles with topics of unclear notability from February 2021\", \"Category:BASIC programming language\", \"Category:Conditional constructs\", \"Category:Microsoft Visual Studio\"]\nreferences: 0\nlast_modified: 2024-11-26T12:58:12Z\n---\n\n# IIf\n\n## Summary\n\nIn computing, IIf (an abbreviation for Immediate if) is a function in several editions of the Visual Basic programming language and ColdFusion Markup Language (CFML), and on spreadsheets that returns the second or third parameter based on the evaluation of the first parameter.  It is an example of a conditional expression, which is similar to a conditional statement.\n\n## Full Content\n\nIn computing, IIf (an abbreviation for Immediate if) is a function in several editions of the Visual Basic programming language and ColdFusion Markup Language (CFML), and on spreadsheets that returns the second or third parameter based on the evaluation of the first parameter.  It is an example of a conditional expression, which is similar to a conditional statement.\n\nSyntax\nThe syntax of the IIf function is as follows:\n\nIIf(expr, truepart, falsepart)\n\nAll three parameters are required:\n\neexpr is the expression that is to be evaluated.\ntruepart defines what the IIf function returns if the evaluation of expr returns true.\nfalsepart defines what the IIf function returns if the evaluation of expr returns false.\nMany languages have an operator to accomplish the same purpose, generally referred to as a conditional operator (or, less precisely, as a ternary operator); the best known is ?:, as used in C, C++, and related languages. Some of the problems with the IIf function, as discussed later, do not exist with a conditional operator, because the language is free to examine the type and delay evaluation of the operands, as opposed to simply passing them to a library function.\n\nExamples\nThese examples evaluate mathematical expressions and return one of two strings depending on the outcome.\n\nresult = IIf(5 < 10, \"Yes it is\", \"No it isn't\")     ' Returns \"Yes it is\"\n\nresult = IIf(2 + 2 = 5, \"Correct\", \"Wrong\")          ' Returns \"Wrong\"\n\nCriticisms\nEfficiency\nBecause IIf is a library function, it will always require the overhead of a function call, whereas a conditional operator will more likely produce inline code.\nFurthermore, the data type of its arguments is Variant. If the function is called with arguments of other types (variables or literals), there will be additional overhead to convert these to Variant. There may also be additional overhead to check the argument types and convert one of them if they do not have the same type.\n\nSide effects\nAnother issue with IIf arises because it is a library function: unlike the C-derived conditional operator, both truepart and the falsepart will be evaluated regardless of which one is actually returned. In the following code snippet:\n\nvalue = 10\nresult = IIf(value = 10, TrueFunction, FalseFunction)\nalthough TrueFunction is the function intended to be called, IIf will call both TrueFunction and FalseFunction. Similarly,\n\nWhile the intent may be to avoid a division by zero, whenever b is zero the error will actually happen. This is because the code in the snippet is executed as if by\n\nThis issue makes the IIf() call less useful than the conditional operator. To solve this issue, Microsoft developers had considered converting IIf to an intrinsic function; had this happened, the compiler would have been able to perform type inference and short-circuiting by replacing the function call with inline code.\n\nAlternatives to IIf\nIn Visual Basic, IIf is not the sole way to evaluate and perform actions based on whether an expression is true or false.\nThe following example uses IIf:\n\nresult = IIf(x = y, value1, value2)\n\nIt could also be written in the following way, using standard conditionals:\n\nThe above example would also eliminate the problem of IIf evaluating both its truepart and falsepart parameters.\nVisual Basic 2008 (VB 9.0) introduced a true conditional operator, called simply \"If\", which also eliminates this problem. Its syntax is similar to the IIf function's syntax:\n\nIIf in other programming languages\n$iif() is present in mIRC script, with similar syntax. \n\nalias testiif { \n  %testiif = 0\n  echo -a $iif(1,$testiif2,$testiif2) %testiif execution(s)\n  unset %testiif\n}\nalias testiif2 { inc %testiif | return testing $!iif: }\n\nCalling /testiif will print out \"testing $iif: 1 execution(s)\". mIRC's $iif acts more like C's ?: than IIf() in VB since it won't pre-evaluate both.\nIIF() is a function in dBase and xBase (1992 and older).\niif() is also a compiler magic function of Oxygene. It is not a real function and is at compile time unrolled to conditional statements.\n\nIn this example a new strong type string named \"someString\" is created (using Type inference) and the iif function will fill it depending on the outcome of the boolean expression.\nSQL Server 2012 and newer implements the IIF() function (Transact-SQL):\n\nIIf in C (and its variants) and Perl is the ?: conditional operator:\n\nIIf in Python:\n\nIIf (either) in Red and Rebol:\n\nReferences\nExternal links\nMSDN Documentation for IIf\n",
  "categories": [
    "Category:All articles with topics of unclear notability",
    "Category:Articles with example BASIC code",
    "Category:Articles with example Python (programming language) code",
    "Category:Articles with topics of unclear notability from February 2021",
    "Category:BASIC programming language",
    "Category:Conditional constructs",
    "Category:Microsoft Visual Studio"
  ],
  "archived_date": "20241220_214810",
  "source_url": "https://en.wikipedia.org/wiki/IIf"
}