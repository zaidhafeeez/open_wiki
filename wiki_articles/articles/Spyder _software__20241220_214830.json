{
  "title": "Spyder (software)",
  "summary": "Spyder is an open-source cross-platform integrated development environment (IDE) for scientific programming in the Python language. Spyder integrates with a number of prominent packages in the scientific Python stack, as well as other open-source software. Created by Pierre Raybaut and released in 2009 under the MIT license, since 2012 Spyder has been maintained and continuously improved by Python developers and the community.\nSpyder is extensible with first-party and third-party plugins, and in",
  "content": "---\ntitle: Spyder (software)\nurl: https://en.wikipedia.org/wiki/Spyder_(software)\nlanguage: en\ncategories: [\"Category:All articles with unsourced statements\", \"Category:Articles with short description\", \"Category:Articles with unsourced statements from December 2024\", \"Category:Commons category link is on Wikidata\", \"Category:Free integrated development environments\", \"Category:Free integrated development environments for Python\", \"Category:Free mathematics software\", \"Category:Free science software\", \"Category:Python (programming language) development tools\", \"Category:Python (programming language) software\", \"Category:Short description matches Wikidata\", \"Category:Software using the MIT license\"]\nreferences: 0\nlast_modified: 2024-12-19T14:30:44Z\n---\n\n# Spyder (software)\n\n## Summary\n\nSpyder is an open-source cross-platform integrated development environment (IDE) for scientific programming in the Python language. Spyder integrates with a number of prominent packages in the scientific Python stack, as well as other open-source software. Created by Pierre Raybaut and released in 2009 under the MIT license, since 2012 Spyder has been maintained and continuously improved by Python developers and the community.\nSpyder is extensible with first-party and third-party plugins, and in\n\n## Full Content\n\nSpyder is an open-source cross-platform integrated development environment (IDE) for scientific programming in the Python language. Spyder integrates with a number of prominent packages in the scientific Python stack, as well as other open-source software. Created by Pierre Raybaut and released in 2009 under the MIT license, since 2012 Spyder has been maintained and continuously improved by Python developers and the community.\nSpyder is extensible with first-party and third-party plugins, and includes support for interactive tools for data inspection and embeds Python-specific code quality assurance and introspection instruments, such as Pyflakes, Pylint and Rope. Spyder uses Qt for its GUI and is designed to use either of the PyQt or PySide Python bindings. QtPy, a thin abstraction layer developed by the Spyder project and later adopted by multiple other packages, provides the flexibility to use either backend.\n\nHistory\nInitially created and developed by Pierre Raybaut, it was published on October 18, 2009 under the MIT license.\nSince 2012 Spyder has been maintained and continuously improved by a team of scientific Python developers and the community. As of 2024, the Spyder website lists the Chan Zuckerberg Initiative and NumFocus as their two major sponsors, also noting donations received from users through Open Collective. Carlos Cordoba was listed as the lead maintainer of the software, with Daniel Althiz as co-maintainer.\n\nSoftware\nIt is an open-source cross-platform integrated development environment (IDE) for scientific programming in the Python language. Spyder integrates with a number of prominent packages in the scientific Python stack, including NumPy, SciPy, Matplotlib, pandas, IPython, SymPy and Cython, as well as other open-source software. \nSpyder is extensible with first-party and third-party plugins, includes support for interactive tools for data inspection and embeds Python-specific code quality assurance and introspection instruments, such as Pyflakes, Pylint and Rope. It is available cross-platform through Anaconda, on Windows, on macOS through MacPorts, and on major Linux distributions such as Arch Linux, Debian, Fedora, Gentoo Linux, openSUSE and Ubuntu.\nSpyder uses Qt for its GUI and is designed to use either of the PyQt or PySide Python bindings. QtPy, a thin abstraction layer developed by the Spyder project and later adopted by multiple other packages, provides the flexibility to use either backend.\n\nFeatures\nFeatures include:\n\nAn editor with syntax highlighting, introspection, code completion\nSupport for multiple IPython consoles\nThe ability to explore and edit variables from a GUI\nA Help pane able to retrieve and render rich text documentation on functions, classes and methods automatically or on-demand\nA debugger linked to IPdb, for step-by-step execution\nStatic code analysis, powered by Pylint\nA run-time Profiler, to benchmark code\nProject support, allowing work on multiple development efforts simultaneously\nA built-in file explorer, for interacting with the filesystem and managing projects\nA \"Find in Files\" feature, allowing full regular expression search over a specified scope\nAn online help browser, allowing users to search and view Python and package documentation inside the IDE\nA history log, recording every user command entered in each console\nAn internal console, allowing for introspection and control over Spyder's own operation\n\nPlugins\nAvailable plugins include:\n\nSpyder-Unittest, which integrates the popular unit testing frameworks Pytest, Unittest and Nose with Spyder\nSpyder-Notebook, allowing the viewing and editing of Jupyter Notebooks within the IDE\nDownload Spyder Notebook\nUsing conda: conda install spyder-notebook -c spyder-ide\nUsing pip: pip install spyder-notebook\nSpyder-Reports, enabling use of literate programming techniques in Python\nSpyder-Terminal, adding the ability to open, control and manage cross-platform system shells within Spyder\nDownload Spyder Terminal\nUsing conda: conda install spyder-terminal -c spyder-ide\nUsing pip: pip install spyder-terminal\nSpyder-Vim, containing commands and shortcuts emulating the Vim text editor\nSpyder-AutoPEP8, which can automatically conform code to the standard PEP 8 code style\nSpyder-Line-Profiler and Spyder-Memory-Profiler, extending the built-in profiling functionality to include testing an individual line, and measuring memory usage\n\nSee also\nComparison of integrated development environments for Python\n\nReferences\nExternal links\n\nOfficial website \nDocumentation\nspyder on GitHub\n",
  "categories": [
    "Category:All articles with unsourced statements",
    "Category:Articles with short description",
    "Category:Articles with unsourced statements from December 2024",
    "Category:Commons category link is on Wikidata",
    "Category:Free integrated development environments",
    "Category:Free integrated development environments for Python",
    "Category:Free mathematics software",
    "Category:Free science software",
    "Category:Python (programming language) development tools",
    "Category:Python (programming language) software",
    "Category:Short description matches Wikidata",
    "Category:Software using the MIT license"
  ],
  "archived_date": "20241220_214830",
  "source_url": "https://en.wikipedia.org/wiki/Spyder_(software)"
}