{
  "title": "SQLAlchemy",
  "summary": "SQLAlchemy is an open-source Python library that provides an SQL toolkit (called \"SQLAlchemy Core\") and an Object Relational Mapper (ORM) for database interactions. It allows developers to work with databases using Python objects, enabling efficient and flexible database access.",
  "content": "---\ntitle: SQLAlchemy\nurl: https://en.wikipedia.org/wiki/SQLAlchemy\nlanguage: en\ncategories: [\"Category:2006 software\", \"Category:Articles with short description\", \"Category:Object\\u2013relational mapping\", \"Category:Python (programming language) libraries\", \"Category:Short description is different from Wikidata\", \"Category:Software using the MIT license\"]\nreferences: 0\nlast_modified: 2024-12-19T14:01:48Z\n---\n\n# SQLAlchemy\n\n## Summary\n\nSQLAlchemy is an open-source Python library that provides an SQL toolkit (called \"SQLAlchemy Core\") and an Object Relational Mapper (ORM) for database interactions. It allows developers to work with databases using Python objects, enabling efficient and flexible database access.\n\n## Full Content\n\nSQLAlchemy is an open-source Python library that provides an SQL toolkit (called \"SQLAlchemy Core\") and an Object Relational Mapper (ORM) for database interactions. It allows developers to work with databases using Python objects, enabling efficient and flexible database access.\n\nDescription\nSQLAlchemy offers tools for database schema generation, querying, and object-relational mapping. Key features include:\n\nA comprehensive embedded domain-specific language for SQL in Python called \"SQLAlchemy Core\" that provides means to construct and execute SQL queries.\nA powerful ORM that allows the mapping of Python classes to database tables.\nSupport for database schema migrations.\nCompatibility with multiple database backends.\nTools for database connection pooling and transaction management.\n\nHistory\nSQLAlchemy was first released in February 2006. It has evolved to include a wide range of features for database interaction and has gained popularity among Python developers. Notable versions include:\n\nVersion 0.1 (2006): Initial release.\nVersion 1.0 (2015): Major enhancements in ORM and SQL expression language.\nVersion 1.4 (2021): Introduction of a new ORM API.\n\nExample\nThe following example represents an n-to-1 relationship between movies and their directors. It is shown how user-defined Python classes create corresponding database tables, how instances with relationships are created from either side of the relationship, and finally how the data can be queried — illustrating automatically generated SQL queries for both lazy and eager loading.\n\nSchema definition\nCreating two Python classes and corresponding database tables in the DBMS:\n\nData insertion\nOne can insert a director-movie relationship via either entity:\n\nQuerying\nSQLAlchemy issues the following query to the DBMS (omitting aliases):\n\nThe output:\n\nSetting lazy=True (default) instead, SQLAlchemy would first issue a query to get the list of movies and only when needed (lazy) for each director a query to get the name of the corresponding director:\n\nSee also\nSQLObject\nStorm\nPylons\nTurboGears\nCubes (OLAP server)\n\nReferences\n\nNotes\nGift, Noah (12 Aug 2008). \"Using SQLAlchemy\". Developerworks. IBM. Retrieved 8 Feb 2011.\nRick Copeland, Essential SQLAlchemy, O'Reilly, 2008, ISBN 0-596-51614-2\n",
  "categories": [
    "Category:2006 software",
    "Category:Articles with short description",
    "Category:Object–relational mapping",
    "Category:Python (programming language) libraries",
    "Category:Short description is different from Wikidata",
    "Category:Software using the MIT license"
  ],
  "archived_date": "20241221_183006",
  "source_url": "https://en.wikipedia.org/wiki/SQLAlchemy"
}