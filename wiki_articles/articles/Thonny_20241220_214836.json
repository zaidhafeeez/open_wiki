{
  "title": "Thonny",
  "summary": "Thonny ( THON-ee) is a free and open-source integrated development environment for Python that is designed for beginners. It was created by Aivar Annamaa, an Estonian programmer. It supports different ways of stepping through code, step-by-step expression evaluation, detailed visualization of the call stack and a mode for explaining the concepts of references and heap.",
  "content": "---\ntitle: Thonny\nurl: https://en.wikipedia.org/wiki/Thonny\nlanguage: en\ncategories: [\"Category:Articles with short description\", \"Category:Computer science education\", \"Category:Free integrated development environments for Python\", \"Category:Official website different in Wikidata and Wikipedia\", \"Category:Pedagogic integrated development environments\", \"Category:Python (programming language) software\", \"Category:Short description is different from Wikidata\", \"Category:Software using the MIT license\"]\nreferences: 0\nlast_modified: 2024-12-19T14:45:10Z\n---\n\n# Thonny\n\n## Summary\n\nThonny ( THON-ee) is a free and open-source integrated development environment for Python that is designed for beginners. It was created by Aivar Annamaa, an Estonian programmer. It supports different ways of stepping through code, step-by-step expression evaluation, detailed visualization of the call stack and a mode for explaining the concepts of references and heap.\n\n## Full Content\n\nThonny ( THON-ee) is a free and open-source integrated development environment for Python that is designed for beginners. It was created by Aivar Annamaa, an Estonian programmer. It supports different ways of stepping through code, step-by-step expression evaluation, detailed visualization of the call stack and a mode for explaining the concepts of references and heap.\n\nFeatures\nLine numbers\nStatement stepping without breakpoints\nLive variables during debugging\nStepping through evaluation of the expressions (expressions get replaced by their values)\nSeparate windows for executing function calls (for explaining local variables and call stack)\nVariables and memory can be explained either by using simplified model (name → value) or by using more realistic model (name → address/id → value)\nSimple pip GUI\nSupport for CPython and MicroPython\nSupport for running and managing files on a remote machine via SSH\nPossibility to log user actions for replaying or analyzing the programming process\n\nAvailability\nThe program works on Windows, macOS and Linux. It is available as a binary bundle including the recent Python interpreter or pip-installable package. It can be installed via the operating-system package manager on Debian, Raspberry Pi, Ubuntu, and Fedora.\n\nReception\nThonny has received favorable reviews from Python and computer science education communities. \nIt has been a recommended tool in several programming MOOCs.\nSince June 2017 it has been included by default in the Raspberry Pi's official operating system distribution Raspberry Pi OS.\n\nSee also\nList of integrated development environments for Python programming language\nToolbox\nKojo\nJUDO\nBASIC-256\nMicrosoft Small Basic\n\nReferences\nExternal links\nOfficial website\nDevelopment site\n",
  "categories": [
    "Category:Articles with short description",
    "Category:Computer science education",
    "Category:Free integrated development environments for Python",
    "Category:Official website different in Wikidata and Wikipedia",
    "Category:Pedagogic integrated development environments",
    "Category:Python (programming language) software",
    "Category:Short description is different from Wikidata",
    "Category:Software using the MIT license"
  ],
  "archived_date": "20241220_214836",
  "source_url": "https://en.wikipedia.org/wiki/Thonny"
}