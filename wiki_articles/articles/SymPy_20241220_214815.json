{
  "title": "SymPy",
  "summary": "SymPy is an open-source Python library for symbolic computation. It provides computer algebra capabilities either as a standalone application, as a library to other applications, or live on the web as SymPy Live or SymPy Gamma. SymPy is simple to install and to inspect because it is written entirely in Python with few dependencies. This ease of access combined with a simple and extensible code base in a well known language make SymPy a computer algebra system with a relatively low barrier to ent",
  "content": "---\ntitle: SymPy\nurl: https://en.wikipedia.org/wiki/SymPy\nlanguage: en\ncategories: [\"Category:All articles with vague or ambiguous time\", \"Category:Articles with example Python (programming language) code\", \"Category:Articles with short description\", \"Category:Computer algebra system software for Linux\", \"Category:Computer algebra system software for Windows\", \"Category:Computer algebra system software for macOS\", \"Category:Free computer algebra systems\", \"Category:Free mathematics software\", \"Category:Free software programmed in Python\", \"Category:Python (programming language) scientific libraries\", \"Category:Short description is different from Wikidata\", \"Category:Vague or ambiguous time from August 2021\"]\nreferences: 0\nlast_modified: 2024-12-19T14:04:39Z\n---\n\n# SymPy\n\n## Summary\n\nSymPy is an open-source Python library for symbolic computation. It provides computer algebra capabilities either as a standalone application, as a library to other applications, or live on the web as SymPy Live or SymPy Gamma. SymPy is simple to install and to inspect because it is written entirely in Python with few dependencies. This ease of access combined with a simple and extensible code base in a well known language make SymPy a computer algebra system with a relatively low barrier to ent\n\n## Full Content\n\nSymPy is an open-source Python library for symbolic computation. It provides computer algebra capabilities either as a standalone application, as a library to other applications, or live on the web as SymPy Live or SymPy Gamma. SymPy is simple to install and to inspect because it is written entirely in Python with few dependencies. This ease of access combined with a simple and extensible code base in a well known language make SymPy a computer algebra system with a relatively low barrier to entry.\nSymPy includes features ranging from basic symbolic arithmetic to calculus, algebra, discrete mathematics, and quantum physics. It is capable of formatting the result of the computations as LaTeX code.\nSymPy is free software and is licensed under the 3-clause BSD. The lead developers are Ondřej Čertík and Aaron Meurer. It was started in 2005 by Ondřej Čertík.\n\nFeatures\nThe SymPy library is split into a core with many optional modules.\nCurrently, the core of SymPy has around 260,000 lines of code (it also includes a comprehensive set of self-tests: over 100,000 lines in 350 files as of version 0.7.5), and its capabilities include:\n\nCore capabilities\nBasic arithmetic: *, /, +, -, **\nSimplification\nExpansion\nFunctions: trigonometric, hyperbolic, exponential, roots, logarithms, absolute value, spherical harmonics, factorials and gamma functions, zeta functions, polynomials, hypergeometric, special functions, etc.\nSubstitution\nArbitrary precision integers, rationals and floats\nNoncommutative symbols\nPattern matching\n\nPolynomials\nBasic arithmetic: division, gcd, etc.\nFactorization\nSquare-free factorization\nGröbner bases\nPartial fraction decomposition\nResultants\n\nCalculus\nLimits\nDifferentiation\nIntegration: Implemented Risch–Norman heuristic\nTaylor series (Laurent series)\n\nSolving equations\nSystems of linear equations\nSystems of algebraic equations that are solvable by radicals\nDifferential equations\nDifference equations\n\nDiscrete math\nBinomial coefficients\nSummations\nProducts\nNumber theory: generating Prime numbers, primality testing, integer factorization, etc.\nLogic expressions\n\nMatrices\nBasic arithmetic\nEigenvalues and their eigenvectors when the characteristic polynomial is solvable by radicals\nDeterminants\nInversion\nSolving\n\nGeometry\nPoints, lines, rays, ellipses, circles, polygons, etc.\nIntersections\nTangency\nSimilarity\n\nPlotting\nNote, plotting requires the external Matplotlib or Pyglet module.\n\nCoordinate models\nPlotting Geometric Entities\n2D and 3D\nInteractive interface\nColors\nAnimations\n\nPhysics\nUnits\nClassical mechanics\nContinuum mechanics\nQuantum mechanics\nGaussian optics\nLinear control\n\nStatistics\nNormal distributions\nUniform distributions\nProbability\n\nCombinatorics\nPermutations\nCombinations\nPartitions\nSubsets\nPermutation group: Polyhedral, Rubik, Symmetric, etc.\nPrufer sequence and Gray codes\n\nPrinting\nPretty-printing: ASCII/Unicode pretty-printing, LaTeX\nCode generation: C, Fortran, Python\n\nRelated projects\nSageMath: an open source alternative to Mathematica, Maple, MATLAB, and Magma (SymPy is included in Sage)\nSymEngine: a rewriting of SymPy's core in C++, in order to increase its performance. Work is currently in progress to make SymEngine the underlying engine of Sage too.\nmpmath: a Python library for arbitrary-precision floating-point arithmetic\nSympyCore: another Python computer algebra system\nSfePy: Software for solving systems of coupled partial differential equations (PDEs) by the finite element method in 1D, 2D and 3D.\nGAlgebra: Geometric algebra module (previously sympy.galgebra).\nQuameon: Quantum Monte Carlo in Python.\nLcapy: Experimental Python package for teaching linear circuit analysis.\nLaTeX Expression project: Easy LaTeX typesetting of algebraic expressions in symbolic form with automatic substitution and result computation.\nSymbolic statistical modeling: Adding statistical operations to complex physical models.\nDiofant: a fork of SymPy, started by Sergey B Kirpichev\n\nDependencies\nSince version 1.0, SymPy has the mpmath package as a dependency.\nThere are several optional dependencies that can enhance its capabilities:\n\ngmpy: If gmpy is installed, SymPy's polynomial module will automatically use it for faster ground types. This can provide a several times boost in performance of certain operations.\nmatplotlib: If matplotlib is installed, SymPy can use it for plotting.\nPyglet: Alternative plotting package.\n\nUsage examples\nPretty-printing\nSympy allows outputs to be formatted into a more appealing format through the pprint function. Alternatively, the init_printing() method will enable pretty-printing, so pprint need not be called. Pretty-printing will use unicode symbols when available in the current environment, otherwise it will fall back to ASCII characters.\n\nExpansion\nArbitrary-precision example\nDifferentiation\nPlotting\nLimits\nDifferential equations\nIntegration\nSeries\nLogical reasoning\nExample 1\nExample 2\nSee also\nComparison of computer algebra systems\n\nReferences\nExternal links\nOfficial website \nPlanet SymPy\nSymPy Tutorials Collection\nCode Repository on GitHub\nSupport and development forum\nGitter chat room\n",
  "categories": [
    "Category:All articles with vague or ambiguous time",
    "Category:Articles with example Python (programming language) code",
    "Category:Articles with short description",
    "Category:Computer algebra system software for Linux",
    "Category:Computer algebra system software for Windows",
    "Category:Computer algebra system software for macOS",
    "Category:Free computer algebra systems",
    "Category:Free mathematics software",
    "Category:Free software programmed in Python",
    "Category:Python (programming language) scientific libraries",
    "Category:Short description is different from Wikidata",
    "Category:Vague or ambiguous time from August 2021"
  ],
  "archived_date": "20241220_214815",
  "source_url": "https://en.wikipedia.org/wiki/SymPy"
}