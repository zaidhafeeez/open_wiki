{
  "title": "Genshi (templating language)",
  "summary": "Genshi is a template engine for XML-based vocabularies written in \nPython.  Genshi is used to easily insert generated output into XML-based languages, usually HTML, and reuse elements between documents.  Genshi's syntax is based on Kid, but its architecture is different. Genshi aims to implement some of its functionality while processing templates faster, by dynamically processing templates using a stream based API, instead of compiling templates to Python code.\nGenshi can be used with several P",
  "content": "---\ntitle: Genshi (templating language)\nurl: https://en.wikipedia.org/wiki/Genshi_(templating_language)\nlanguage: en\ncategories: [\"Category:Free software programmed in Python\", \"Category:Free system software\", \"Category:Official website different in Wikidata and Wikipedia\", \"Category:Python (programming language) libraries\", \"Category:Python (programming language) software\", \"Category:Scripting languages\", \"Category:Template engines\"]\nreferences: 0\nlast_modified: 2024-11-24T06:40:50Z\n---\n\n# Genshi (templating language)\n\n## Summary\n\nGenshi is a template engine for XML-based vocabularies written in \nPython.  Genshi is used to easily insert generated output into XML-based languages, usually HTML, and reuse elements between documents.  Genshi's syntax is based on Kid, but its architecture is different. Genshi aims to implement some of its functionality while processing templates faster, by dynamically processing templates using a stream based API, instead of compiling templates to Python code.\nGenshi can be used with several P\n\n## Full Content\n\nGenshi is a template engine for XML-based vocabularies written in \nPython.  Genshi is used to easily insert generated output into XML-based languages, usually HTML, and reuse elements between documents.  Genshi's syntax is based on Kid, but its architecture is different. Genshi aims to implement some of its functionality while processing templates faster, by dynamically processing templates using a stream based API, instead of compiling templates to Python code.\nGenshi can be used with several Python web frameworks, such as CherryPy, TurboGears, Pylons and web2py. Genshi was the default templating language for TurboGears from versions 1.1 to 2.3.8.\n\nGenshi markup\nGenshi makes use of namespaces to embed instructions into HTML.  A typical instruction is given as an attribute, with a Python expression inside the quotes.  For example, the following will render a paragraph that shows 4:\n\nBecause of the use of namespaces, Genshi can be used in WYSIWYG HTML editors.\n\nDifferences between Kid and Genshi\nGenshi directly interprets templates (unlike Kid, which generates Python code)\nGenshi uses XInclude for template reuse\nGenshi adds attributes Kid does not have, like py:choose\nGenshi templates are easier to debug, because it tracks template source file names and line numbers, and errors from Genshi's interpreter produce more comprehensible stack traces than from Kid's generated code.\n\nReferences\nExternal links\nOfficial website\n",
  "categories": [
    "Category:Free software programmed in Python",
    "Category:Free system software",
    "Category:Official website different in Wikidata and Wikipedia",
    "Category:Python (programming language) libraries",
    "Category:Python (programming language) software",
    "Category:Scripting languages",
    "Category:Template engines"
  ],
  "archived_date": "20241220_214824",
  "source_url": "https://en.wikipedia.org/wiki/Genshi_(templating_language)"
}