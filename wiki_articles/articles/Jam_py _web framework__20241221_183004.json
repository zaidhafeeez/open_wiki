{
  "title": "Jam.py (web framework)",
  "summary": "Jam.py is free and open-source low-code/no-code \"full stack\" WSGI rapid application development framework for the JavaScript and Python programming language.\nJam.py is a  Single-page, event driven\n low-code development platform for database-driven business web applications, based on DRY principle, with emphasis on CRUD.\nIt is designed to automatically create JavaScript web forms from the underlying database tables, although a form can be created manually if required.\nIt offers a built-in web ser",
  "content": "---\ntitle: Jam.py (web framework)\nurl: https://en.wikipedia.org/wiki/Jam.py_(web_framework)\nlanguage: en\ncategories: [\"Category:2015 software\", \"Category:Articles with short description\", \"Category:CS1 errors: bare URL\", \"Category:CS1 errors: missing title\", \"Category:Free software programmed in Python\", \"Category:Low Code Application Platform\", \"Category:Official website different in Wikidata and Wikipedia\", \"Category:Python (programming language) web frameworks\", \"Category:Short description matches Wikidata\"]\nreferences: 0\nlast_modified: 2024-12-19T14:54:15Z\n---\n\n# Jam.py (web framework)\n\n## Summary\n\nJam.py is free and open-source low-code/no-code \"full stack\" WSGI rapid application development framework for the JavaScript and Python programming language.\nJam.py is a  Single-page, event driven\n low-code development platform for database-driven business web applications, based on DRY principle, with emphasis on CRUD.\nIt is designed to automatically create JavaScript web forms from the underlying database tables, although a form can be created manually if required.\nIt offers a built-in web ser\n\n## Full Content\n\nJam.py is free and open-source low-code/no-code \"full stack\" WSGI rapid application development framework for the JavaScript and Python programming language.\nJam.py is a  Single-page, event driven\n low-code development platform for database-driven business web applications, based on DRY principle, with emphasis on CRUD.\nIt is designed to automatically create JavaScript web forms from the underlying database tables, although a form can be created manually if required.\nIt offers a built-in web server, Application Builder and database access for third-party databases.\n\nFeatures\nSingle distribution which runs with both Python 2.6+ and 3.x\nCan run as a standalone web development server or be used with any web server which supports WSGI\nBuilt-in GUI builder called Application Builder\nSupport for JSON client data (for REST and JavaScript clients)\nSupport for popular databases Oracle Database, Microsoft SQL Server, PostgreSQL, SQLite, MySQL, Firebird (database server), SQLCipher\nExtensible authentication mechanisms and role-based access control\nInternationalization support\njQuery for Ajax and UI\nTemplate language\nReports Templates based on LibreOffice\nFiles upload\n\nDistinctive features\nBuilt-in Application Builder\nAll development, maintenance and remote database administration can be performed via Builder interface. The most distinctive feature is the Client and Server Module. The Server Module enables the Python code for business logic, executed as a server-side session. The Client Module executes the JavaScript code within a browser. It is possible to exchange data between the two.\n \nApplication Builder is strongly influenced by Delphi visual designer.\n\nApplication Builder Client Module\nThe following JavaScript code shows a simple web page that displays \"Hello World!\" when visited: \n\nThe above code resides in Task/Client Module(s) within the Application Builder. The task function can be accessed globally.\n\nApplication Builder Server Module\nThe Python libraries can be imported within the Task/Server Module(s):\n\nThe above code imports smtplib library, which might be used to send emails. The defined functions can be accessed globally.\n\nDatabase migrations\nJam.py supports database migration and data import from one supported database to another.\nThe below code in the Task/Server Module will import data from SQLite to application database:\n\nLimitations:\n\nThe SQLite database can not be imported into the application database which has foreign keys.\n\nPythonAnywhere\nPythonAnywhere Python 3.x deployment is supported\n\nNotes\nReferences\nSee also\nFlask (web framework)\nPylons project\nWeb2py\nDjango (web framework)\nComparison of web frameworks\nList of low-code development platforms\n\nExternal links\nOfficial website\n",
  "categories": [
    "Category:2015 software",
    "Category:Articles with short description",
    "Category:CS1 errors: bare URL",
    "Category:CS1 errors: missing title",
    "Category:Free software programmed in Python",
    "Category:Low Code Application Platform",
    "Category:Official website different in Wikidata and Wikipedia",
    "Category:Python (programming language) web frameworks",
    "Category:Short description matches Wikidata"
  ],
  "archived_date": "20241221_183004",
  "source_url": "https://en.wikipedia.org/wiki/Jam.py_(web_framework)"
}