{
  "title": "DEAP (software)",
  "summary": "Distributed Evolutionary Algorithms in Python (DEAP) is an evolutionary computation framework for rapid prototyping and testing of ideas. It incorporates the data structures and tools required to implement most common evolutionary computation techniques such as genetic algorithm, genetic programming, evolution strategies, particle swarm optimization, differential evolution, traffic flow and estimation of distribution algorithm. It is developed at Université Laval since 2009.",
  "content": "---\ntitle: DEAP (software)\nurl: https://en.wikipedia.org/wiki/DEAP_(software)\nlanguage: en\ncategories: [\"Category:All articles needing additional references\", \"Category:Articles needing additional references from September 2015\", \"Category:Articles with example Python (programming language) code\", \"Category:Evolutionary computation\", \"Category:Free science software\", \"Category:Official website different in Wikidata and Wikipedia\", \"Category:Python (programming language) scientific libraries\"]\nreferences: 0\nlast_modified: 2024-11-24T06:40:53Z\n---\n\n# DEAP (software)\n\n## Summary\n\nDistributed Evolutionary Algorithms in Python (DEAP) is an evolutionary computation framework for rapid prototyping and testing of ideas. It incorporates the data structures and tools required to implement most common evolutionary computation techniques such as genetic algorithm, genetic programming, evolution strategies, particle swarm optimization, differential evolution, traffic flow and estimation of distribution algorithm. It is developed at Université Laval since 2009.\n\n## Full Content\n\nDistributed Evolutionary Algorithms in Python (DEAP) is an evolutionary computation framework for rapid prototyping and testing of ideas. It incorporates the data structures and tools required to implement most common evolutionary computation techniques such as genetic algorithm, genetic programming, evolution strategies, particle swarm optimization, differential evolution, traffic flow and estimation of distribution algorithm. It is developed at Université Laval since 2009.\n\nExample\nThe following code gives a quick overview how the Onemax problem optimization with genetic algorithm can be implemented with DEAP.\n\nSee also\nPython SCOOP (software)\n Free software portal\n\nReferences\nExternal links\nOfficial website\ndeap on GitHub\n",
  "categories": [
    "Category:All articles needing additional references",
    "Category:Articles needing additional references from September 2015",
    "Category:Articles with example Python (programming language) code",
    "Category:Evolutionary computation",
    "Category:Free science software",
    "Category:Official website different in Wikidata and Wikipedia",
    "Category:Python (programming language) scientific libraries"
  ],
  "archived_date": "20241220_214817",
  "source_url": "https://en.wikipedia.org/wiki/DEAP_(software)"
}