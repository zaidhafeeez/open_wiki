{
  "title": "One-liner program",
  "summary": "In computer programming, a one-liner program originally was textual input to the command line of an operating system shell that performed some function in just one line of input. In the present day, a one-liner can be\n\nan expression written in the language of the shell;\nthe invocation of an interpreter together with program source for the interpreter to run;\nthe invocation of a compiler together with source to compile and instructions for executing the compiled program.\nCertain dynamic languages",
  "content": "---\ntitle: One-liner program\nurl: https://en.wikipedia.org/wiki/One-liner_program\nlanguage: en\ncategories: [\"Category:All articles needing additional references\", \"Category:Articles needing additional references from May 2019\", \"Category:Articles with example C code\", \"Category:Articles with example Haskell code\", \"Category:Articles with example Perl code\", \"Category:Articles with example Python (programming language) code\", \"Category:Articles with example Racket code\", \"Category:Articles with short description\", \"Category:Computer programming\", \"Category:Pages using Sister project links with default search\", \"Category:Short description is different from Wikidata\"]\nreferences: 0\nlast_modified: 2024-12-19T13:45:57Z\n---\n\n# One-liner program\n\n## Summary\n\nIn computer programming, a one-liner program originally was textual input to the command line of an operating system shell that performed some function in just one line of input. In the present day, a one-liner can be\n\nan expression written in the language of the shell;\nthe invocation of an interpreter together with program source for the interpreter to run;\nthe invocation of a compiler together with source to compile and instructions for executing the compiled program.\nCertain dynamic languages\n\n## Full Content\n\nIn computer programming, a one-liner program originally was textual input to the command line of an operating system shell that performed some function in just one line of input. In the present day, a one-liner can be\n\nan expression written in the language of the shell;\nthe invocation of an interpreter together with program source for the interpreter to run;\nthe invocation of a compiler together with source to compile and instructions for executing the compiled program.\nCertain dynamic languages for scripting, such as AWK, sed, and Perl, have traditionally been adept at expressing one-liners.\nShell interpreters such as Unix shells or Windows PowerShell allow for the construction of powerful one-liners.\nThe use of the phrase one-liner has been widened to also include program-source for any language that does something useful in one line.\n\nHistory\nThe concept of a one-liner program has been known since the 1960s with the release of the APL programming language. With its terse syntax and powerful mathematical operators, APL allowed useful programs to be represented in a few symbols.\nIn the 1970s, one-liners became associated with the rise of the home computer and BASIC. Computer magazines published type-in programs in many dialects of BASIC. Some magazines devoted regular columns solely to impressive short and one-line programs.\nThe word One-liner also has two references in the index of the book The AWK Programming Language (the book is often referred to by the abbreviation TAPL). It explains the programming language AWK, which is part of the Unix operating system. The authors explain the birth of the one-liner paradigm with their daily work on early Unix machines:\n\nThe 1977 version had only a few built-in variables and predefined functions. It was designed for writing short programs [â€¦] Our model was that an invocation would be one or two lines long, typed in and used immediately. Defaults were chosen to match this style [â€¦] We, being the authors, knew how the language was supposed to be used, and so we only wrote one-liners.\nNotice that this original definition of a one-liner implies immediate execution of the program without any compilation. So, in a strict sense, only source code for interpreted languages qualifies as a one-liner. But this strict understanding of a one-liner was broadened in 1985 when the IOCCC introduced the category of Best One Liner for C, which is a compiled language.\n\nExamples\nOne-liners are also used to show off the differential expressive power of programming languages. Frequently, one-liners are used to demonstrate programming ability. Contests are often held to see who can create the most exceptional one-liner.\n\nBASIC\nA single line of BASIC can typically hold up to 255 characters, and one liners ranged from simple games to graphical demos. One of the better-known demo one-liners is colloquially known as 10PRINT, written for the Commodore 64:\n\nC\nThe following example is a C program (a winning entry in the \"Best one-liner\" category of the IOCCC).\n\nThis one-liner program is a glob pattern matcher. It understands the glob characters *, meaning zero or more characters, and ?, meaning exactly one character, just like most Unix shells.\nRun it with two args, the string and the glob pattern. The exit status is 0 (shell true) when the pattern matches, 1 otherwise. The glob pattern must match the whole string, so you may want to use * at the beginning and end of the pattern if you are looking for something in the middle. Examples:\n\nAWK\nThe book The AWK Programming Language contains 20 examples of one-liners at the end of the book's first chapter.\nHere are the very first of them:\n\nPrint the total number of input lines (like wc -l): \nPrint the tenth input line: \nPrint the last field of every input line:\n\nJ\nHere are examples in J:\n\nA function avg to return the average of a list of numbers: \nQuicksort:\n\nPerl\nHere are examples in the Perl programming language:\n\nLook for duplicate words\nperl -0777 -ne 'print \"$.: doubled $_\\n\" while /\\b(\\w+)\\b\\s+\\b\\1\\b/gi' \n\nFind Palindromes in /usr/dict/words\nperl -lne 'print if $_ eq reverse' /usr/dict/words\n\nin-place edit of *.c files changing all foo to bar\nperl -p -i.bak -e 's/\\bfoo\\b/bar/g' *.c\n\nMany one-liners are practical. For example, the following Perl one-liner will reverse all the bytes in a file:\n\nWhile most Perl one-liners are imperative, Perl's support for anonymous functions, closures, map, filter (grep) and fold (List::Util::reduce) allows the creation of 'functional' one-liners.\nThis one-liner creates a function that can be used to return a list of primes up to the value of the first parameter:\n\nIt can be used on the command line, like this:\n\nperl -e'$,=\",\";print sub { grep { $a=$_; !grep { !($a % $_) } (2..$_-1)} (2..$_[0]) }->(shift)' number\n\nto print out a comma-separated list of primes in the range 2 - number.\n\nHaskell\nThe following Haskell program is a one-liner: it sorts its input lines ASCIIbetically.\n\nAn even shorter version:\n\nUsable on the command line like:\n\nRacket\nThe following Racket program is equivalent to the above Haskell example:\n\nand this can be used on the command line as follows:\n\nracket -e '(for-each displayln (sort (port->lines) string<?))'\n\nPython\nPerforming one-liners directly on the Unix command line can be accomplished by using Python's -cmd flag (-c for short), and typically requires the import of one or more modules. Statements are separated using \";\" instead of newlines. For example, to print the last field of unix long listing:\n\nls -l | python -c \"import sys;[sys.stdout.write(' '.join([line.split(' ')[-1]])) for line in sys.stdin]\"\n\nPython wrappers\nSeveral open-source scripts have been developed to facilitate the construction of Python one-liners. Scripts such as \npyp or Pyline import commonly used modules and provide more human-readable variables in an attempt to make Python functionality more accessible on the command line. Here is a redo of the above example (printing the last field of a unix long listing):\n\nExecutable libraries\nThe Python CGIHTTPServer module for example is also an executable library that performs as a web server with CGI. To start the web server enter:\n\nTcl\nTcl (Tool Command Language) is a dynamic programming/scripting language based on concepts of Lisp, C, and Unix shells. It can be used interactively, or by running scripts (programs) which can use a package system for structuring.\nMany strings are also well-formed lists. Every simple word is a list of length one, and elements of longer lists are separated by whitespace. For instance, a string that corresponds to a list of three elements:\n\nStrings with unbalanced quotes or braces, or non-space characters directly following closing braces, cannot be parsed as lists directly. You can explicitly split them to make a list.\nThe \"constructor\" for lists is of course called list. It's recommended to use when elements come from variable or command substitution (braces won't do that). As Tcl commands are lists anyway, the following is a full substitute for the list command:\n\nWindows PowerShell\nFinding palindromes in file words.txt\n\nPiping semantics in PowerShell help enable complex scenarios with one-liner programs. This one-liner in PowerShell script takes a list of names and counts from a comma-separated value file, and returns the sum of the counts for each name.\n\nSee also\nBookmarklet\nTcl\n\nReferences\nExternal links\n\nPerl Programming links\nWikibooks Free Tcl Programming introduction & download pdf\nSourceForge, download website and also Multiple computer languages\nTcl Sources, main Tcl and Tk source code download website\nTcler's Wiki, Tcl/Tk scripts and reference clearing house\nTkDocs, Tcl/Tk Official documentation and archives\n",
  "categories": [
    "Category:All articles needing additional references",
    "Category:Articles needing additional references from May 2019",
    "Category:Articles with example C code",
    "Category:Articles with example Haskell code",
    "Category:Articles with example Perl code",
    "Category:Articles with example Python (programming language) code",
    "Category:Articles with example Racket code",
    "Category:Articles with short description",
    "Category:Computer programming",
    "Category:Pages using Sister project links with default search",
    "Category:Short description is different from Wikidata"
  ],
  "archived_date": "20241221_183042",
  "source_url": "https://en.wikipedia.org/wiki/One-liner_program"
}